// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/dataflow/v1beta3/templates.proto

package com.google.dataflow.v1beta3;

public interface LaunchTemplateParametersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.dataflow.v1beta3.LaunchTemplateParameters)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The job name to use for the created job.
   * </pre>
   *
   * <code>string job_name = 1;</code>
   * @return The jobName.
   */
  java.lang.String getJobName();
  /**
   * <pre>
   * Required. The job name to use for the created job.
   * </pre>
   *
   * <code>string job_name = 1;</code>
   * @return The bytes for jobName.
   */
  com.google.protobuf.ByteString
      getJobNameBytes();

  /**
   * <pre>
   * The runtime parameters to pass to the job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 2;</code>
   */
  int getParametersCount();
  /**
   * <pre>
   * The runtime parameters to pass to the job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 2;</code>
   */
  boolean containsParameters(
      java.lang.String key);
  /**
   * Use {@link #getParametersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getParameters();
  /**
   * <pre>
   * The runtime parameters to pass to the job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getParametersMap();
  /**
   * <pre>
   * The runtime parameters to pass to the job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 2;</code>
   */

  java.lang.String getParametersOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * The runtime parameters to pass to the job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 2;</code>
   */

  java.lang.String getParametersOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * The runtime environment for the job.
   * </pre>
   *
   * <code>.google.dataflow.v1beta3.RuntimeEnvironment environment = 3;</code>
   * @return Whether the environment field is set.
   */
  boolean hasEnvironment();
  /**
   * <pre>
   * The runtime environment for the job.
   * </pre>
   *
   * <code>.google.dataflow.v1beta3.RuntimeEnvironment environment = 3;</code>
   * @return The environment.
   */
  com.google.dataflow.v1beta3.RuntimeEnvironment getEnvironment();
  /**
   * <pre>
   * The runtime environment for the job.
   * </pre>
   *
   * <code>.google.dataflow.v1beta3.RuntimeEnvironment environment = 3;</code>
   */
  com.google.dataflow.v1beta3.RuntimeEnvironmentOrBuilder getEnvironmentOrBuilder();

  /**
   * <pre>
   * If set, replace the existing pipeline with the name specified by jobName
   * with this pipeline, preserving state.
   * </pre>
   *
   * <code>bool update = 4;</code>
   * @return The update.
   */
  boolean getUpdate();

  /**
   * <pre>
   * Only applicable when updating a pipeline. Map of transform name prefixes of
   * the job to be replaced to the corresponding name prefixes of the new job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; transform_name_mapping = 5;</code>
   */
  int getTransformNameMappingCount();
  /**
   * <pre>
   * Only applicable when updating a pipeline. Map of transform name prefixes of
   * the job to be replaced to the corresponding name prefixes of the new job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; transform_name_mapping = 5;</code>
   */
  boolean containsTransformNameMapping(
      java.lang.String key);
  /**
   * Use {@link #getTransformNameMappingMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getTransformNameMapping();
  /**
   * <pre>
   * Only applicable when updating a pipeline. Map of transform name prefixes of
   * the job to be replaced to the corresponding name prefixes of the new job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; transform_name_mapping = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getTransformNameMappingMap();
  /**
   * <pre>
   * Only applicable when updating a pipeline. Map of transform name prefixes of
   * the job to be replaced to the corresponding name prefixes of the new job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; transform_name_mapping = 5;</code>
   */

  java.lang.String getTransformNameMappingOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Only applicable when updating a pipeline. Map of transform name prefixes of
   * the job to be replaced to the corresponding name prefixes of the new job.
   * </pre>
   *
   * <code>map&lt;string, string&gt; transform_name_mapping = 5;</code>
   */

  java.lang.String getTransformNameMappingOrThrow(
      java.lang.String key);
}
